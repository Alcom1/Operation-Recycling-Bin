{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\engine\\scene\\scene.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport GameObject from \"engine/gameobjects/gameobject\";\r\nimport { GMULTX, GMULTY } from \"engine/utilities/math\";\r\n\r\nexport interface SceneParams {\r\n    name?: string,\r\n    tag?: string,\r\n    need?: string[],\r\n    zIndex?: number,\r\n    gameObjects?: GameObject[],\r\n    initialized?: boolean;\r\n}\r\n\r\nexport default class Scene {\r\n    public name: string;\r\n    private need: string[];\r\n    public zIndex: number;\r\n    private gameObjects: GameObject[];\r\n    private initialized: boolean;\r\n\r\n    constructor(\r\n        private engine: Engine,\r\n        {\r\n            name = \"nameless\",\r\n            need = [],\r\n            zIndex = 0,\r\n            gameObjects = [],\r\n            initialized = false\r\n        }: SceneParams\r\n    ) {\r\n        this.name = name;\r\n        // Required scenes for this scene to initialize\r\n        this.need = need;\r\n        this.zIndex = zIndex;\r\n        this.gameObjects = [];\r\n        this.initialized = false;\r\n    }\r\n\r\n    public init(ctx: CanvasRenderingContext2D, scenes: Scene[]) {\r\n        \r\n        if (\r\n            !this.initialized && \r\n            this.need.every(n => this.engine.tag.exists(n))\r\n        ) {\r\n\r\n            ctx.save();\r\n                this.gameObjects.forEach(go =>  go.init(ctx, scenes));\r\n            ctx.restore();\r\n\r\n            this.engine.collision.pushGOs(this.name, this.gameObjects);\r\n\r\n            this.initialized = true;\r\n        }\r\n    }\r\n\r\n    public pushGO(gameObject: GameObject) : GameObject {\r\n        // Establish parent scene before pushing\r\n        gameObject.parent = this;\r\n        this.gameObjects.push(gameObject);\r\n        return gameObject;\r\n    }\r\n\r\n    public sortGO() {\r\n        //Sort game objects by z-index.\r\n        this.gameObjects.sort((a, b) => a.zIndex - b.zIndex);\r\n    }\r\n\r\n    public update(dt: number) {\r\n        if(this.initialized) {\r\n            this.gameObjects.forEach(go => { if(!go.isActive) { return; }\r\n                go.update(dt)\r\n            });\r\n        }\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D) {\r\n        if (this.initialized) {\r\n            this.gameObjects.filter(go => go.isActive).forEach(go => this.subDraw(ctx, go, go.draw));\r\n        }\r\n    }\r\n\r\n    public superDraw(ctx: CanvasRenderingContext2D) {\r\n        if (this.initialized) {\r\n            this.gameObjects.filter(go => go.isActive).forEach(go => this.subDraw(ctx, go, go.superDraw));\r\n        }\r\n    }\r\n\r\n    private subDraw(ctx: CanvasRenderingContext2D, gameObject : GameObject, drawAction : Function) {\r\n\r\n        ctx.save();\r\n        ctx.translate(\r\n            gameObject.gpos.x * GMULTX + gameObject.spos.x, \r\n            gameObject.gpos.y * GMULTY + gameObject.spos.y\r\n        );\r\n        drawAction.call(gameObject, ctx);\r\n        ctx.restore();\r\n    }\r\n}\r\n"],
  "mappings": "AAEA;AAFA;AAAA,EAoBI,YACY;AAAA,IAEJ,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,cAAc;AAAA,IACd,cAAc;AAAA;AANV;AASR,SAAK,OAAO;AAEZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,cAAc;AAAA;AAAA,EAGhB;AAEH,QACI,CAAC,KAAK,eACN,KAAK,KAAK,MAAM,OAAK,KAAK,OAAO,IAAI,OAAO;AAG5C,UAAI;AACA,WAAK,YAAY,QAAQ,QAAO,GAAG,KAAK,KAAK;AACjD,UAAI;AAEJ,WAAK,OAAO,UAAU,QAAQ,KAAK,MAAM,KAAK;AAE9C,WAAK,cAAc;AAAA;AAAA;AAAA,EAIpB;AAEH,eAAW,SAAS;AACpB,SAAK,YAAY,KAAK;AACtB,WAAO;AAAA;AAAA,EAGJ;AAEH,SAAK,YAAY,KAAK,UAAU,EAAE,SAAS,EAAE;AAAA;AAAA,EAG1C;AACH,QAAG,KAAK;AACJ,WAAK,YAAY,QAAQ;AAAQ,YAAG,CAAC,GAAG;AAAY;AAAA;AAChD,WAAG,OAAO;AAAA;AAAA;AAAA;AAAA,EAKf;AACH,QAAI,KAAK;AACL,WAAK,YAAY,OAAO,QAAM,GAAG,UAAU,QAAQ,QAAM,KAAK,QAAQ,KAAK,IAAI,GAAG;AAAA;AAAA;AAAA,EAInF;AACH,QAAI,KAAK;AACL,WAAK,YAAY,OAAO,QAAM,GAAG,UAAU,QAAQ,QAAM,KAAK,QAAQ,KAAK,IAAI,GAAG;AAAA;AAAA;AAAA,EAIlF;AAEJ,QAAI;AACJ,QAAI,UACA,WAAW,KAAK,IAAI,SAAS,WAAW,KAAK,GAC7C,WAAW,KAAK,IAAI,SAAS,WAAW,KAAK;AAEjD,eAAW,KAAK,YAAY;AAC5B,QAAI;AAAA;AAAA;",
  "names": []
}
