{
  "version": 3,
  "sources": ["/home/jonathan/Development/lego/Operation-Recycling-Bin/src/engine/scene/scene.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\nimport GameObject from \"engine/gameobjects/gameobject\";\nimport { GMULTX, GMULTY } from \"engine/utilities/math\";\n\nexport interface SceneParams {\n    name?: string,\n    need?: string[],\n    zIndex?: number,\n    gameObjects?: GameObject[],\n    initialized?: boolean;\n}\n\nexport default class Scene {\n    public name: string;\n    private need: string[];\n    public zIndex: number;\n    private gameObjects: GameObject[];\n    private initialized: boolean;\n\n    constructor(\n        private engine: Engine,\n        {\n            name = \"nameless\",\n            need = [],\n            zIndex = 0,\n            gameObjects = [],\n            initialized = false\n        }: SceneParams\n    ) {\n        this.name = name;\n        // Required scenes for this scene to initialize\n        this.need = need;\n        this.zIndex = zIndex;\n        this.gameObjects = [];\n        this.initialized = false;\n    }\n\n    init(ctx: CanvasRenderingContext2D, scenes: Scene[]) {\n        const a = document.getElementById('x') as HTMLCanvasElement;\n        if (\n            !this.initialized && \n            this.need.every(n => this.engine.tag.exists(n))\n        ) {\n\n            ctx.save();\n                this.gameObjects.forEach(go =>  go.init(ctx, scenes));\n            ctx.restore();\n\n            this.initialized = true;\n        }\n    }\n\n    clear() {\n        this.gameObjects = []\n    }\n\n    pushGO(gameObject: GameObject) {\n        // Establish parent scene before pushing\n        gameObject.parent = this;\n        this.gameObjects.push(gameObject);\n    }\n\n    sortGO() {\n        //Sort game objects by z-index.\n        this.gameObjects.sort((a, b) => a.zIndex - b.zIndex);\n    }\n\n    update(dt: number) {\n        if(this.initialized) {\n            this.gameObjects.forEach(go =>  go.update(dt));\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        if (this.initialized) {\n            for (const go of this.gameObjects) {\n                ctx.save();\n                ctx.translate(\n                    go.gpos.x * GMULTX + go.spos.x, \n                    go.gpos.y * GMULTY + go.spos.y\n                );\n                go.draw(ctx);\n                ctx.restore();\n            }\n        }\n    } \n}\n"],
  "mappings": "AAEA;AAFA;AAAA,EAmBI,YACY;AAAA,IAEJ,OAAO;AAAA,IACP,OAAO;AAAA,IACP,SAAS;AAAA,IACT,cAAc;AAAA,IACd,cAAc;AAAA;AANV;AASR,SAAK,OAAO;AAEZ,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,cAAc;AACnB,SAAK,cAAc;AAAA;AAAA,EAGvB;AACI,cAAU,SAAS,eAAe;AAClC,QACI,CAAC,KAAK,eACN,KAAK,KAAK,MAAM,OAAK,KAAK,OAAO,IAAI,OAAO;AAG5C,UAAI;AACA,WAAK,YAAY,QAAQ,QAAO,GAAG,KAAK,KAAK;AACjD,UAAI;AAEJ,WAAK,cAAc;AAAA;AAAA;AAAA,EAI3B;AACI,SAAK,cAAc;AAAA;AAAA,EAGvB;AAEI,eAAW,SAAS;AACpB,SAAK,YAAY,KAAK;AAAA;AAAA,EAG1B;AAEI,SAAK,YAAY,KAAK,UAAU,EAAE,SAAS,EAAE;AAAA;AAAA,EAGjD;AACI,QAAG,KAAK;AACJ,WAAK,YAAY,QAAQ,QAAO,GAAG,OAAO;AAAA;AAAA;AAAA,EAIlD;AACI,QAAI,KAAK;AACL,uBAAiB,KAAK;AAClB,YAAI;AACJ,YAAI,UACA,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,GAC7B,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK;AAEjC,WAAG,KAAK;AACR,YAAI;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
