{
  "version": 3,
  "sources": ["/home/jonathan/Development/lego/Operation-Recycling-Bin/src/engine/utilities/vect.ts"],
  "sourcesContent": ["export interface Point {\n    x: number;\n    y: number;\n}\n\nfunction isPoint(vect: any | Point): vect is Point {\n    return vect.x !== undefined && vect.y !== undefined;\n}\n\nexport default class Vect implements Point {\n    constructor(public x: number, public y: number) {}\n\n    public get(): Vect {\n        return new Vect(this.x, this.y);\n    }\n\n    public set(x: number, y: number): void;\n    public set(vect: Point): void;\n    public set(a: number| Point, b?: number): void {\n        if (isPoint(a)) {\n            this.x = a.x;\n            this.y = a.y;\n        } else {\n            if (b === undefined) throw new Error(\"Vector y can't be undefined\");\n            this.x = a;\n            this.y = b;\n        }\n    }\n\n    /** Get if two vectors have different values */\n    public getDiff(vect: Point) {\n        return vect.x != this.x || vect.y != this.y;\n    }\n\n    public add(vect: Point): void {\n        this.x += vect.x;\n        this.y += vect.y;\n    }\n\n    public getAdd (vect: Point): Vect {\n        return new Vect(this.x + vect.x, this.y + vect.y);\n    }\n\n    public sub(vect: Point): void {\n        this.x -= vect.x;\n        this.y -= vect.y;\n    }\n\n    public getSub(vect: Point): Vect {\n        return new Vect(this.x - vect.x, this.y - vect.y);\n    }\n\n    public mult(value: number): void {\n        this.x *= value;\n        this.y *= value;\n    }\n\n    public getMult(value: number): Vect {\n        return new Vect(this.x * value, this.y * value);\n    }\n\n    public div(value: number): void {\n        this.x /= value;\n        this.y /= value;\n    }\n\n    public getDiv(value: number): Vect {\n        return new Vect(this.x / value, this.y / value);\n    }\n\n    public clamp(min: Point, max: Point): void {\n        this.x = Math.max(min.x, Math.min(max.x, this.x));\n        this.y = Math.max(min.y, Math.min(max.y, this.y));\n    }\n\n    public getClamp(min: Point, max: Point): Vect {\n        return new Vect(\n            Math.max(min.x, Math.min(max.x, this.x)),\n            Math.max(min.y, Math.min(max.y, this.y))\n        );\n    }\n\n    public getDot(value: Point): number {\n\n        return this.x * value.x + this.y * value.y;\n    }\n\n    public getCross(value: Point): number {\n        return this.x * value.y - this.y * value.x;\n    }\n\n    public norm(): void {\n        var length = Math.sqrt(this.x * this.x + this.y * this.y);\n        this.x /= length;\n        this.y /= length;\n    }\n    \n    public getNorm() {\n        var length = Math.sqrt(this.x * this.x + this.y * this.y);\n        return new Vect(this.x / length, this.y / length);\n    }\n\n    public getMagnitude(): number {\n        return Math.sqrt(this.getMagnitudeSquared());\n    }\n\n    public getMagnitudeSquared(): number {\n        return this.x * this.x + this.y * this.y;\n    }\n}\n"],
  "mappings": "AAKA,iBAAiB;AACb,SAAO,KAAK,MAAM,UAAa,KAAK,MAAM;AAAA;AAN9C;AAAA,EAUI;AAAmB;AAAkB;AAAA;AAAA,EAE9B;AACH,WAAO,IAAI,KAAK,KAAK,GAAG,KAAK;AAAA;AAAA,EAK1B;AACH,QAAI,QAAQ;AACR,WAAK,IAAI,EAAE;AACX,WAAK,IAAI,EAAE;AAAA;AAEX,UAAI,MAAM;AAAW,cAAM,IAAI,MAAM;AACrC,WAAK,IAAI;AACT,WAAK,IAAI;AAAA;AAAA;AAAA,EAKV;AACH,WAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA;AAAA,EAGvC;AACH,SAAK,KAAK,KAAK;AACf,SAAK,KAAK,KAAK;AAAA;AAAA,EAGZ;AACH,WAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK;AAAA;AAAA,EAG5C;AACH,SAAK,KAAK,KAAK;AACf,SAAK,KAAK,KAAK;AAAA;AAAA,EAGZ;AACH,WAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK;AAAA;AAAA,EAG5C;AACH,SAAK,KAAK;AACV,SAAK,KAAK;AAAA;AAAA,EAGP;AACH,WAAO,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,IAAI;AAAA;AAAA,EAGtC;AACH,SAAK,KAAK;AACV,SAAK,KAAK;AAAA;AAAA,EAGP;AACH,WAAO,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,IAAI;AAAA;AAAA,EAGtC;AACH,SAAK,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK;AAC9C,SAAK,IAAI,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK;AAAA;AAAA,EAG3C;AACH,WAAO,IAAI,KACP,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,KACrC,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK;AAAA;AAAA,EAItC;AAEH,WAAO,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;AAAA;AAAA,EAGtC;AACH,WAAO,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM;AAAA;AAAA,EAGtC;AACH,iBAAa,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AACvD,SAAK,KAAK;AACV,SAAK,KAAK;AAAA;AAAA,EAGP;AACH,iBAAa,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AACvD,WAAO,IAAI,KAAK,KAAK,IAAI,QAAQ,KAAK,IAAI;AAAA;AAAA,EAGvC;AACH,WAAO,KAAK,KAAK,KAAK;AAAA;AAAA,EAGnB;AACH,WAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAAA;AAAA;",
  "names": []
}
