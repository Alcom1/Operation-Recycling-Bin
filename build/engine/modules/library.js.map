{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\engine\\modules\\library.ts"],
  "sourcesContent": ["import { pathImg } from \"../utilities/math\";\r\n\r\n/** Module that stores assets for simutaneous non-redudnant asset loading */\r\nexport default class LibraryModule {\r\n    private assetsImage: Map<string, HTMLImageElement> = new Map<string, HTMLImageElement>();\r\n    private loadingCount: number = 0;\r\n\r\n    /** Get an image asset, store it if it's new. */\r\n    public getImage(name : string, extension? : string) {\r\n\r\n        const curr = this.assetsImage.get(name);\r\n\r\n        return curr == null ? \r\n            this.storeImage(name, pathImg(name, extension)) :   // If the asset isn't in the library, add it\r\n            curr;                                               // Otherwise, return existing asset\r\n    }\r\n\r\n    /** Get an image asset from a full src, store it if it's new. */\r\n    public getImageWithSrc(name : string, src : string) {\r\n\r\n        const curr = this.assetsImage.get(name);\r\n\r\n        return curr == null ? \r\n            this.storeImage(name, src) :                        // If the asset isn't in the library, add it\r\n            curr;                                               // Otherwise, return existing asset\r\n    }\r\n    private storeImage(name : string, src : string) {\r\n\r\n        this.loadingCount++;\r\n        \r\n        // Create, store, and return new image\r\n        const image = new Image();\r\n        image.src = src;\r\n        image.onload = e => this.loadingCount--;\r\n        this.assetsImage.set(name, image);\r\n        return image;\r\n    }\r\n\r\n    /** Return true if all assets are loaded */\r\n    public getLoaded() {\r\n\r\n        // Return if there's no more images that need loading\r\n        return this.loadingCount <= 0;\r\n    }\r\n}\r\n"],
  "mappings": "AAAA;AAAA;AAAA;AAIY,uBAA6C,IAAI;AACjD,wBAAuB;AAAA;AAAA,EAGxB,SAAS;AAEZ,iBAAa,KAAK,YAAY,IAAI;AAElC,WAAO,QAAQ,OACX,KAAK,WAAW,MAAM,QAAQ,MAAM,cACpC;AAAA;AAAA,EAID;AAEH,iBAAa,KAAK,YAAY,IAAI;AAElC,WAAO,QAAQ,OACX,KAAK,WAAW,MAAM,OACtB;AAAA;AAAA,EAEA;AAEJ,SAAK;AAGL,kBAAc,IAAI;AAClB,UAAM,MAAM;AACZ,UAAM,SAAS,OAAK,KAAK;AACzB,SAAK,YAAY,IAAI,MAAM;AAC3B,WAAO;AAAA;AAAA,EAIJ;AAGH,WAAO,KAAK,gBAAgB;AAAA;AAAA;",
  "names": []
}
