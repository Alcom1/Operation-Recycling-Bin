{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\engine\\modules\\library.ts"],
  "sourcesContent": ["import { pathImg } from \"../utilities/math\";\r\n\r\n/** Module that stores assets for simutaneous non-redudnant asset loading */\r\nexport default class LibraryModule {\r\n    private assetsImage: Map<string, HTMLImageElement> = new Map<string, HTMLImageElement>();\r\n    private isLoaded: Boolean = true;\r\n\r\n    /** Get an image asset, store it if it's new. */\r\n    public getImage(name : string, extension? : string) {\r\n\r\n        const curr = this.assetsImage.get(name);\r\n\r\n        //If the asset isn't in the library, add it\r\n        if(curr == null) {\r\n            this.isLoaded = false;\r\n\r\n            //Create, store, and return new image\r\n            const image = new Image();\r\n            image.src = pathImg(name, extension);\r\n            this.assetsImage.set(name, image);\r\n            return image;\r\n        }\r\n        \r\n        return curr;\r\n    }\r\n\r\n    /** Return true if all assets are loaded */\r\n    public getLoaded() {\r\n        \r\n        //If the library isn't marked as loaded\r\n        if(!this.isLoaded) {\r\n\r\n            //Check all assets for loaded status, set loaded as true if everything is loaded\r\n            if(Array.from(this.assetsImage.values()).every(i => i.complete)) {\r\n                this.isLoaded = true;\r\n            }\r\n\r\n            return this.isLoaded;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n"],
  "mappings": "AAAA;AAAA;AAAA;AAIY,uBAA6C,IAAI;AACjD,oBAAoB;AAAA;AAAA,EAGrB,SAAS;AAEZ,iBAAa,KAAK,YAAY,IAAI;AAGlC,QAAG,QAAQ;AACP,WAAK,WAAW;AAGhB,oBAAc,IAAI;AAClB,YAAM,MAAM,QAAQ,MAAM;AAC1B,WAAK,YAAY,IAAI,MAAM;AAC3B,aAAO;AAAA;AAGX,WAAO;AAAA;AAAA,EAIJ;AAGH,QAAG,CAAC,KAAK;AAGL,UAAG,MAAM,KAAK,KAAK,YAAY,UAAU,MAAM,OAAK,EAAE;AAClD,aAAK,WAAW;AAAA;AAGpB,aAAO,KAAK;AAAA;AAGhB,WAAO;AAAA;AAAA;",
  "names": []
}
