{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\engine\\gameobjects\\gameobject.ts"],
  "sourcesContent": ["import Vect, { Point } from \"engine/utilities/vect\";\r\nimport Scene from \"engine/scene/scene\";\r\nimport Engine from \"engine/engine\";\r\n\r\nexport interface GameObjectParams {\r\n    position?: Point;\r\n    subPosition?: Point;\r\n    zIndex?: number;\r\n    scene: Scene;\r\n    name: string;\r\n    tags?: [string];\r\n}\r\n\r\n/** Base game object */\r\nexport default class GameObject {\r\n    /** Grid position */\r\n    public gpos: Vect;\r\n    /** Sub-position */\r\n    public spos: Vect;\r\n    public zIndex: number;\r\n    public tags: string[];\r\n    public parent: Scene;\r\n    public isActive: Boolean = true;\r\n\r\n    constructor(protected engine: Engine, params: GameObjectParams) {\r\n        this.gpos = new Vect(params.position?.x ?? 0, params.position?.y ?? 0);\r\n        this.spos = new Vect(params.subPosition?.x ?? 0, params.subPosition?.y ?? 0);\r\n        this.zIndex = params.zIndex ?? 0;\r\n        this.tags = params.tags ?? [params.name];\r\n        this.parent = params.scene;\r\n    }\r\n\r\n    /**\r\n     * Initialize a game object after its scene is loaded.\r\n     * @param ctx\r\n     * @param scenes\r\n     */\r\n    init(ctx: CanvasRenderingContext2D, scenes: Scene[]): void {}\r\n\r\n    /**\r\n     * Compare two objects, return true if they are the same\r\n     * @param gameObject GameObject to compare against\r\n     * @returns Whether or not the game objects are the same\r\n     */\r\n    compare(gameObject: GameObject): boolean {\r\n        //Default compare uses grid positions\r\n        return gameObject.gpos.x == this.gpos.x && gameObject.gpos.y == this.gpos.y;\r\n    }\r\n\r\n    /**\r\n     * Game object update\r\n     * @param dt Delta time\r\n     */\r\n    hasTag(tag: string): boolean {\r\n        return this.tags.some(t => t === tag);\r\n    }\r\n\r\n    /**\r\n     * Game object update\r\n     * @param dt Delta time\r\n     */\r\n    update(dt: number): void {}\r\n\r\n    /**\r\n     * Game object draw\r\n     * @param ctx\r\n     */\r\n    draw(ctx: CanvasRenderingContext2D): void {}\r\n\r\n    /**\r\n     * Latter game object draw\r\n     * @param ctx\r\n     */\r\n    superDraw(ctx: CanvasRenderingContext2D): void {}\r\n}\r\n"],
  "mappings": "AAAA;AAAA;AAAA,EAwBI,YAAsB;AAAA;AAFf,oBAAoB;AAGvB,SAAK,OAAO,IAAI,KAAK,OAAO,UAAU,KAAK,GAAG,OAAO,UAAU,KAAK;AACpE,SAAK,OAAO,IAAI,KAAK,OAAO,aAAa,KAAK,GAAG,OAAO,aAAa,KAAK;AAC1E,SAAK,SAAS,OAAO,UAAU;AAC/B,SAAK,OAAO,OAAO,QAAQ,CAAC,OAAO;AACnC,SAAK,SAAS,OAAO;AAAA;AAAA,EAQzB;AAAA;AAAA,EAOA;AAEI,WAAO,WAAW,KAAK,KAAK,KAAK,KAAK,KAAK,WAAW,KAAK,KAAK,KAAK,KAAK;AAAA;AAAA,EAO9E;AACI,WAAO,KAAK,KAAK,KAAK,OAAK,MAAM;AAAA;AAAA,EAOrC;AAAA;AAAA,EAMA;AAAA;AAAA,EAMA;AAAA;AAAA;",
  "names": []
}
