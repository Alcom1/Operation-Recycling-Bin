{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\characterbot.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport Character, { CharacterParams } from \"./character\";\r\nimport { BOUNDARY, GMULTX, GMULTY, bitStack, colRectRectSizes} from \"engine/utilities/math\";\r\nimport Scene from \"engine/scene/scene\";\r\nimport Animat, { AnimationParams } from \"./animation\";\r\nimport CharacterBin from \"./characterbin\";\r\nimport { Collider } from \"engine/modules/collision\";\r\n\r\nexport interface CharacterBotParams extends CharacterParams {\r\n    animsMisc : AnimationParams[];\r\n}\r\n\r\n//Bot parameters\r\nconst characterBotOverride = Object.freeze({\r\n    //Main parameters\r\n    height: 4,      //Bot is this tall\r\n    speed : 2.5,    //Bot moves fast\r\n    images : [      //Bot has left & right animations\r\n        { name : \"char_bot_left\", offsetX : 36 },\r\n        { name : \"char_bot_right\", offsetX : 14}],\r\n    frameCount : 10,\r\n    animsCount : 2,\r\n\r\n    //Misc animation parameters\r\n    animsMisc : [{ //Bot-bin interaction animation\r\n        images : [{ name : \"char_bot_bin\", offsetX : 0 }],\r\n        framesSize : 126,\r\n        gposOffset : { x : -1, y : 0},\r\n        zModifier : 150,\r\n        frameCount : 12\r\n    },{             //Bot explosion animation\r\n        images : [{ name : \"char_bot_explosion\", offsetX : 0 }],\r\n        framesSize : 200,\r\n        gposOffset : { x : -3, y : 0},\r\n        zModifier : 600,\r\n        frameCount : 16,\r\n        isLoop : false\r\n    }]\r\n});\r\n\r\n//Collision bitmasks for bot-brick collisions\r\nconst cbc = Object.freeze({\r\n    flor : bitStack([0, 7]),\r\n    down : bitStack([1, 8]),\r\n    ceil : bitStack([2, 9]),\r\n    head : bitStack([3]),\r\n    wall : bitStack([4, 5]),\r\n    step : bitStack([6])\r\n});\r\n\r\nexport default class CharacterBot extends Character {\r\n\r\n    private timer : number = 0;\r\n\r\n    constructor(engine: Engine, params: CharacterBotParams) {\r\n        super(engine, Object.assign(params, characterBotOverride));\r\n\r\n        //Setup miscellaneous animations.\r\n        params.animsMisc.forEach(i => {\r\n\r\n            debugger;\r\n\r\n            //Build a new animation, store it here and in the scene\r\n            var newIndex = this.spriteGroups.push([]) - 1;\r\n            this.spriteGroups[newIndex].push(new Animat(this.engine, {\r\n                ...params,\r\n                speed : i.speed,\r\n                images : i.images,\r\n                framesSize : i.framesSize,\r\n                gposOffset : i.gposOffset,\r\n                zModifier : i.zModifier,\r\n                frameCount : i.frameCount,\r\n                animsCount : i.animsCount,\r\n                isLoop : i.isLoop\r\n            } as AnimationParams));\r\n            console.log(this.spriteGroups[newIndex][0]);\r\n            this.parent.pushGO(this.spriteGroups[newIndex][0]);\r\n        });\r\n    }\r\n\r\n    //Special movement\r\n    protected handleUniqueMovment(dt : number) {\r\n\r\n        this.timer += dt;\r\n\r\n        //Go to new state. Every special animation is 1 second?\r\n        if(this.timer > 1) {\r\n\r\n            switch(this.spriteGroupIndex) {\r\n                \r\n                case 1 :\r\n                    this.timer = 0;\r\n                    this.setCurrentGroup(0);\r\n                    break;\r\n\r\n                default :\r\n                    this.isActive = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Check and resolve brick collisions\r\n    protected handleCollision() {\r\n\r\n        //Collision bitmask\r\n        let cbm = this.brickHandler.checkCollisionRange(\r\n            this.gpos.getSub({x: this.move.x > 0 ? 1 : 0, y : 5}),  //Position\r\n            5,                                                      // n + 1\r\n            15,                                                     //(n + 3) * 2 + 1\r\n            7,                                                      // n + 3\r\n            this.move.x);                                           //Direction\r\n\r\n        // var qq = \"\"\r\n\r\n        // for(let i = 0; i < 8; i++) {\r\n        //     if(cbm & 1 << i) {\r\n        //         qq += i + \" \";\r\n        //     }\r\n        // }\r\n        \r\n        //WALL BOUNDARY\r\n        if(\r\n            this.gpos.x - 1 < BOUNDARY.minx || \r\n            this.gpos.x + 1 > BOUNDARY.maxx) {\r\n\r\n            this.reverse();\r\n        }\r\n        else {\r\n\r\n            //WALL - REVERSE\r\n            if(cbm & cbc.wall) {\r\n                this.reverse();\r\n            }\r\n            //HEAD-WALL - REVERSE\r\n            else if(cbm & cbc.head && cbm & cbc.flor) {\r\n                this.reverse();\r\n            }\r\n            //UP-STEP - GO UP\r\n            else if(cbm & cbc.step) {\r\n\r\n                //BLOCKED BY CEILING\r\n                if(cbm & cbc.ceil || this.gpos.y <= BOUNDARY.miny + 3) {\r\n                    this.reverse();\r\n                }\r\n                else {\r\n                    this.gpos.y -= 1;\r\n                }\r\n            }\r\n            //FLOOR - DO NOTHING\r\n            else if(cbm & cbc.flor) {\r\n\r\n            }\r\n            //DOWN-STEP - GO DOWN\r\n            else if(cbm & cbc.down) {\r\n                this.gpos.y += 1;\r\n            }\r\n            //VOID - REVERSE\r\n            else {\r\n                this.reverse();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Colliders for non-brick collisions\r\n    public getColliders() : Collider[] {\r\n        \r\n        return [{ \r\n            mask : 0b111,   //All collisions\r\n            min : this.gpos.getAdd({ x : -1, y : 1 - this.height}),\r\n            max : this.gpos.getAdd({ x :  1, y : 1}) \r\n        },{ \r\n            mask : 0,       //Passive\r\n            min : this.gpos.getAdd({ x : -1, y : 1 - this.height}),\r\n            max : this.gpos.getAdd({ x :  1, y : 1}) \r\n        }];\r\n    }\r\n\r\n    //Explode\r\n    public resolveCollision(mask : number) {\r\n\r\n        if (mask & 0b010) {\r\n            this.setCurrentGroup(1);\r\n        }\r\n        else if (mask & 0b100 && this.isNormalMovment) {\r\n            this.setCurrentGroup(2);\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
