{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\characterbot.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport Character, { CharacterParams, CharacterImageParams } from \"./character\";\r\nimport { BOUNDARY, GMULTX, GMULTY, bitStack, colRectRectSizes} from \"engine/utilities/math\";\r\nimport Scene from \"engine/scene/scene\";\r\nimport SpriteAnimated, { SpriteAnimatedParams } from \"./spriteanimated\";\r\nimport CharacterBin from \"./characterbin\";\r\n\r\nexport interface CharacterBotParams extends CharacterParams {\r\n    imagesMisc : CharacterImageParams[];\r\n}\r\n\r\nconst characterBotOverride = Object.freeze({\r\n    height: 4,\r\n    speed : 2.5,\r\n    images : [\r\n        { name : \"char_bot_left\", offset : 36 },\r\n        { name : \"char_bot_right\", offset : 14}],\r\n    imagesMisc : [\r\n        { name : \"char_bot_bin\", offset : 0 }],\r\n    animFrames : 10,\r\n    animCount : 2\r\n});\r\n\r\nconst cbc = Object.freeze({\r\n    flor : bitStack([0, 7]),\r\n    down : bitStack([1, 8]),\r\n    ceil : bitStack([2, 9]),\r\n    head : bitStack([3]),\r\n    wall : bitStack([4, 5]),\r\n    step : bitStack([6])\r\n});\r\n\r\nexport default class CharacterBot extends Character {\r\n\r\n    private timer : number = 0;\r\n    private bins : CharacterBin[] = [];\r\n\r\n    constructor(engine: Engine, params: CharacterBotParams) {\r\n        super(engine, Object.assign(params, characterBotOverride));\r\n\r\n        var newIndex = this.spriteGroups.push([]) - 1;\r\n        this.spriteGroups[newIndex].push(new SpriteAnimated(this.engine, {\r\n            ...params, \r\n            images : params.imagesMisc,\r\n            order : 0,\r\n            offset : -GMULTX,\r\n            width : 126,\r\n            animFrames : 12,\r\n            animCount : 1,\r\n            speed : 1\r\n        } as SpriteAnimatedParams));\r\n        this.parent.pushGO(this.spriteGroups[newIndex][0]);\r\n    }\r\n\r\n    public init(ctx: CanvasRenderingContext2D, scenes: Scene[]): void {\r\n        super.init(ctx, scenes);\r\n\r\n        this.bins = this.engine.tag.get(\"CharacterBin\", \"Level\") as Character[];\r\n    }\r\n\r\n    protected handleUniqueMovmeent(dt : number) {\r\n\r\n        this.timer += dt;\r\n\r\n        if(this.timer > 1) {\r\n            this.timer = 0;\r\n            this.setCurrentGroup(0);\r\n        }\r\n    }\r\n\r\n    protected handleCollision() {\r\n\r\n        this.bins.forEach(b => {\r\n            if (b.isActive && \r\n                colRectRectSizes(\r\n                    this.gpos.x,\r\n                    this.gpos.y,\r\n                    2,\r\n                    this.height,\r\n                    b.gpos.x,\r\n                    b.gpos.y + 1,\r\n                    2,\r\n                    b.height - 1)) {\r\n                \r\n                var ary = this.gpos.y;\r\n                var arh = this.height;\r\n                var bry = b.gpos.y;\r\n                var brh = b.height;\r\n\r\n                var aminy = ary;\r\n                var amaxy = ary + arh;\r\n                var bminy = bry;\r\n                var bmaxy = bry + brh;\r\n\r\n                console.log(aminy, amaxy, bminy, bmaxy, aminy < bmaxy, amaxy > bminy)\r\n\r\n                b.deactivate();\r\n                this.setCurrentGroup(1);\r\n            }\r\n        })\r\n\r\n        //Collision bitmask\r\n        let cbm = this.brickHandler.checkCollisionRange(\r\n            this.gpos.getSub({x: this.move.x > 0 ? 1 : 0, y : 5}),  //Position\r\n            5,                                                      // n + 1\r\n            15,                                                     //(n + 3) * 2 + 1\r\n            7,                                                      // n + 3\r\n            this.move.x);                                           //Direction\r\n\r\n        // var qq = \"\"\r\n\r\n        // for(let i = 0; i < 8; i++) {\r\n        //     if(cbm & 1 << i) {\r\n        //         qq += i + \" \";\r\n        //     }\r\n        // }\r\n\r\n        // console.log(qq);\r\n        \r\n        //WALL BOUNDARY\r\n        if(\r\n            this.gpos.x - 1 < BOUNDARY.minx || \r\n            this.gpos.x + 1 > BOUNDARY.maxx) {\r\n\r\n            this.reverse();\r\n        }\r\n        else {\r\n\r\n            //WALL - REVERSE\r\n            if(cbm & cbc.wall) {\r\n                this.reverse();\r\n            }\r\n            //HEAD-WALL - REVERSE\r\n            else if(cbm & cbc.head && cbm & cbc.flor) {\r\n                this.reverse();\r\n            }\r\n            //UP-STEP - GO UP\r\n            else if(cbm & cbc.step) {\r\n\r\n                //BLOCKED BY CEILING\r\n                if(cbm & cbc.ceil || this.gpos.y <= BOUNDARY.miny + 3) {\r\n                    this.reverse();\r\n                }\r\n                else {\r\n                    this.gpos.y -= 1;\r\n                }\r\n            }\r\n            //FLOOR - DO NOTHING\r\n            else if(cbm & cbc.flor) {\r\n\r\n            }\r\n            //DOWN-STEP - GO DOWN\r\n            else if(cbm & cbc.down) {\r\n                this.gpos.y += 1;\r\n            }\r\n            //VOID - REVERSE\r\n            else {\r\n                this.reverse();\r\n            }\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "AACA;AACA;AAEA;AAOA,MAAM,uBAAuB,OAAO,OAAO;AAAA,EACvC,QAAQ;AAAA,EACR,OAAQ;AAAA,EACR,QAAS;AAAA,IACL,CAAE,MAAO,iBAAiB,QAAS;AAAA,IACnC,CAAE,MAAO,kBAAkB,QAAS;AAAA;AAAA,EACxC,YAAa;AAAA,IACT,CAAE,MAAO,gBAAgB,QAAS;AAAA;AAAA,EACtC,YAAa;AAAA,EACb,WAAY;AAAA;AAGhB,YAAY,OAAO,OAAO;AAAA,EACtB,MAAO,SAAS,CAAC,GAAG;AAAA,EACpB,MAAO,SAAS,CAAC,GAAG;AAAA,EACpB,MAAO,SAAS,CAAC,GAAG;AAAA,EACpB,MAAO,SAAS,CAAC;AAAA,EACjB,MAAO,SAAS,CAAC,GAAG;AAAA,EACpB,MAAO,SAAS,CAAC;AAAA;AA7BrB,0CAgC0C;AAAA,EAKtC;AACI,UAAM,SAAQ,OAAO,OAAO,QAAQ;AAJhC,iBAAiB;AACjB,gBAAwB;AAK5B,mBAAe,KAAK,aAAa,KAAK,MAAM;AAC5C,SAAK,aAAa,UAAU,KAAK,IAAI,eAAe,KAAK,QAAQ;AAAA,SAC1D;AAAA,MACH,QAAS,OAAO;AAAA,MAChB,OAAQ;AAAA,MACR,QAAS,CAAC;AAAA,MACV,OAAQ;AAAA,MACR,YAAa;AAAA,MACb,WAAY;AAAA,MACZ,OAAQ;AAAA;AAEZ,SAAK,OAAO,OAAO,KAAK,aAAa,UAAU;AAAA;AAAA,EAG5C;AACH,UAAM,KAAK,KAAK;AAEhB,SAAK,OAAO,KAAK,OAAO,IAAI,IAAI,gBAAgB;AAAA;AAAA,EAG1C;AAEN,SAAK,SAAS;AAEd,QAAG,KAAK,QAAQ;AACZ,WAAK,QAAQ;AACb,WAAK,gBAAgB;AAAA;AAAA;AAAA,EAInB;AAEN,SAAK,KAAK,QAAQ;AACd,UAAI,EAAE,YACF,iBACI,KAAK,KAAK,GACV,KAAK,KAAK,GACV,GACA,KAAK,QACL,EAAE,KAAK,GACP,EAAE,KAAK,IAAI,GACX,GACA,EAAE,SAAS;AAEf,kBAAU,KAAK,KAAK;AACpB,kBAAU,KAAK;AACf,kBAAU,EAAE,KAAK;AACjB,kBAAU,EAAE;AAEZ,oBAAY;AACZ,oBAAY,MAAM;AAClB,oBAAY;AACZ,oBAAY,MAAM;AAElB,gBAAQ,IAAI,OAAO,OAAO,OAAO,OAAO,QAAQ,OAAO,QAAQ;AAE/D,UAAE;AACF,aAAK,gBAAgB;AAAA;AAAA;AAK7B,cAAU,KAAK,aAAa,oBACxB,KAAK,KAAK,OAAO,CAAC,GAAG,KAAK,KAAK,IAAI,IAAI,IAAI,GAAG,GAAI,KAClD,GACA,IACA,GACA,KAAK,KAAK;AAad,QACI,KAAK,KAAK,IAAI,IAAI,SAAS,QAC3B,KAAK,KAAK,IAAI,IAAI,SAAS;AAE3B,WAAK;AAAA;AAKL,UAAG,MAAM,IAAI;AACT,aAAK;AAAA,iBAGD,MAAM,IAAI,QAAQ,MAAM,IAAI;AAChC,aAAK;AAAA,iBAGD,MAAM,IAAI;AAGd,YAAG,MAAM,IAAI,QAAQ,KAAK,KAAK,KAAK,SAAS,OAAO;AAChD,eAAK;AAAA;AAGL,eAAK,KAAK,KAAK;AAAA;AAAA,iBAIf,MAAM,IAAI;AAAA,iBAIV,MAAM,IAAI;AACd,aAAK,KAAK,KAAK;AAAA;AAIf,aAAK;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
