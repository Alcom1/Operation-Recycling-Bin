{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\character.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport GameObject, { GameObjectParams } from \"engine/gameobjects/gameobject\";\r\nimport { BOUNDARY, GMULTX, GMULTY } from \"engine/utilities/math\";\r\nimport Vect, { Point } from \"engine/utilities/vect\";\r\nimport BrickHandler from \"./brickhandler\";\r\n\r\ninterface CharacterParams extends GameObjectParams {\r\n    size?: Point;\r\n    speed?: number;\r\n}\r\n\r\nexport default class Character extends GameObject {\r\n    private speed: number;\r\n    protected move: Vect;\r\n    protected brickHandler!: BrickHandler;\r\n    protected checkCollision: boolean;\r\n\r\n    constructor(engine: Engine, params: CharacterParams) {\r\n        super(engine, params);\r\n        this.speed = params.speed ?? 1;\r\n        this.move = new Vect(1, 1);\r\n        this.checkCollision = true;\r\n    }\r\n\r\n    public init(ctx: CanvasRenderingContext2D) {\r\n        \r\n        this.brickHandler = this.engine.tag.get(\"BrickHandler\", \"LevelInterface\")[0] as BrickHandler;\r\n    }\r\n\r\n    public update(dt: number) {\r\n\r\n        //Increment position by speed\r\n        this.spos.x += this.move.x * this.speed * GMULTX * dt;\r\n\r\n        //Step grid position further once subposition goes past a grid-unit\r\n        if (Math.abs(this.spos.x) > GMULTX) {\r\n            var dir = Math.sign(this.spos.x);\r\n\r\n            this.spos.x -= GMULTX * dir;\r\n            this.gpos.x += dir;\r\n\r\n            this.checkCollision = true;\r\n        }\r\n\r\n        //Check collision\r\n        if(this.checkCollision) {\r\n            this.handleCollision();\r\n\r\n            this.checkCollision = false;\r\n        }\r\n    }\r\n\r\n    protected handleCollision() {\r\n\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.strokeStyle = \"#F00\"\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeRect(\r\n           -GMULTX, \r\n            GMULTY, \r\n            GMULTX * 2, \r\n            GMULTY * 2);\r\n    }\r\n}\r\n"],
  "mappings": "AACA;AACA;AACA;AAHA,uCAWuC;AAAA,EAMnC,YAAY;AACR,UAAM,SAAQ;AACd,SAAK,QAAQ,OAAO,SAAS;AAC7B,SAAK,OAAO,IAAI,KAAK,GAAG;AACxB,SAAK,iBAAiB;AAAA;AAAA,EAGnB;AAEH,SAAK,eAAe,KAAK,OAAO,IAAI,IAAI,gBAAgB,kBAAkB;AAAA;AAAA,EAGvE;AAGH,SAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,QAAQ,SAAS;AAGnD,QAAI,KAAK,IAAI,KAAK,KAAK,KAAK;AACxB,gBAAU,KAAK,KAAK,KAAK,KAAK;AAE9B,WAAK,KAAK,KAAK,SAAS;AACxB,WAAK,KAAK,KAAK;AAEf,WAAK,iBAAiB;AAAA;AAI1B,QAAG,KAAK;AACJ,WAAK;AAEL,WAAK,iBAAiB;AAAA;AAAA;AAAA,EAIpB;AAAA;AAAA,EAIH;AAEH,QAAI,cAAc;AAClB,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,WACD,CAAC,QACA,QACA,SAAS,GACT,SAAS;AAAA;AAAA;",
  "names": []
}
