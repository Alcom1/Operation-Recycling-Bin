{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\character.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport GameObject, { GameObjectParams } from \"engine/gameobjects/gameobject\";\r\nimport { BOUNDARY, GMULTX, GMULTY } from \"engine/utilities/math\";\r\nimport Vect, { Point } from \"engine/utilities/vect\";\r\nimport BrickHandler from \"./brickhandler\";\r\n\r\ninterface CharacterParams extends GameObjectParams {\r\n    size?: Point;\r\n    speed?: number;\r\n}\r\n\r\nexport default class Character extends GameObject {\r\n    private size: Vect;\r\n    private speed: number;\r\n    private text: string = '';\r\n    private move: Vect;\r\n    private brickHandler!: BrickHandler;\r\n    private checkCollision: boolean;\r\n\r\n    constructor(engine: Engine, params: CharacterParams) {\r\n        super(engine, params);\r\n        this.size = new Vect(params.size?.x ?? 0, params.size?.y ?? 0);\r\n        this.speed = params.speed ?? 1;\r\n        this.move = new Vect(1, 1);\r\n        this.checkCollision = true;\r\n    }\r\n\r\n    public init(ctx: CanvasRenderingContext2D) {\r\n        \r\n        this.brickHandler = this.engine.tag.get(\"BrickHandler\", \"LevelInterface\")[0] as BrickHandler;\r\n    }\r\n\r\n    public update(dt: number) {\r\n\r\n        //Increment position by speed\r\n        this.spos.x += this.move.x * this.speed * GMULTX * dt;\r\n\r\n        //Step grid position further once subposition goes past a grid-unit\r\n        if (Math.abs(this.spos.x) > GMULTX) {\r\n            var dir = Math.sign(this.spos.x);\r\n\r\n            this.spos.x -= GMULTX * dir;\r\n            this.gpos.x += dir;\r\n\r\n            this.checkCollision = true;\r\n        }\r\n\r\n        if (this.checkCollision) {\r\n            \r\n            if (this.move.x < 0) {\r\n\r\n                if (\r\n                    this.brickHandler.checkSelectionCollisionHorz(\r\n                        this.gpos,\r\n                        1)) {\r\n\r\n                    this.gpos.y -= 1;\r\n                }\r\n                else if (\r\n                    this.gpos.x <= BOUNDARY.minx ||\r\n                    this.brickHandler.checkSelectionCollisionHorz(\r\n                        this.gpos.getAdd(new Vect(-1, -1 )),\r\n                        this.size.y - 1)) {\r\n\r\n                    this.move.x = 1;\r\n                }\r\n            }\r\n            else if(this.move.x > 0) {\r\n\r\n                if (\r\n                    this.brickHandler.checkSelectionCollisionHorz(\r\n                        this.gpos.getAdd(new Vect(this.size.x - 1, 0 )),\r\n                        1)) {\r\n\r\n                    this.gpos.y -= 1;\r\n                }\r\n                else if (this.gpos.x > BOUNDARY.maxx ||\r\n                    this.brickHandler.checkSelectionCollisionHorz(\r\n                        this.gpos.getAdd(new Vect(this.size.x, -1 )),\r\n                        this.size.y - 1)) {\r\n\r\n                    this.move.x = -1;\r\n                }\r\n                 \r\n            }\r\n            else {\r\n                this.checkCollision = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.strokeStyle = \"#F00\"\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeRect(\r\n            0, \r\n            GMULTY, \r\n            this.size.x * GMULTX, \r\n           -this.size.y * GMULTY);\r\n\r\n        ctx.translate(-this.spos.x, 0);\r\n        \r\n        ctx.fillStyle = \"#FF0\"\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.fillRect(\r\n            0, \r\n            GMULTY, \r\n            this.size.x * GMULTX, \r\n           -this.size.y * GMULTY);\r\n    }\r\n}\r\n"],
  "mappings": "AACA;AACA;AACA;AAHA,uCAWuC;AAAA,EAQnC,YAAY;AACR,UAAM,SAAQ;AANV,gBAAe;AAOnB,SAAK,OAAO,IAAI,KAAK,OAAO,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK;AAC5D,SAAK,QAAQ,OAAO,SAAS;AAC7B,SAAK,OAAO,IAAI,KAAK,GAAG;AACxB,SAAK,iBAAiB;AAAA;AAAA,EAGnB;AAEH,SAAK,eAAe,KAAK,OAAO,IAAI,IAAI,gBAAgB,kBAAkB;AAAA;AAAA,EAGvE;AAGH,SAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,QAAQ,SAAS;AAGnD,QAAI,KAAK,IAAI,KAAK,KAAK,KAAK;AACxB,gBAAU,KAAK,KAAK,KAAK,KAAK;AAE9B,WAAK,KAAK,KAAK,SAAS;AACxB,WAAK,KAAK,KAAK;AAEf,WAAK,iBAAiB;AAAA;AAG1B,QAAI,KAAK;AAEL,UAAI,KAAK,KAAK,IAAI;AAEd,YACI,KAAK,aAAa,4BACd,KAAK,MACL;AAEJ,eAAK,KAAK,KAAK;AAAA,mBAGf,KAAK,KAAK,KAAK,SAAS,QACxB,KAAK,aAAa,4BACd,KAAK,KAAK,OAAO,IAAI,KAAK,IAAI,MAC9B,KAAK,KAAK,IAAI;AAElB,eAAK,KAAK,IAAI;AAAA;AAAA,iBAGd,KAAK,KAAK,IAAI;AAElB,YACI,KAAK,aAAa,4BACd,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,KAC3C;AAEJ,eAAK,KAAK,KAAK;AAAA,mBAEV,KAAK,KAAK,IAAI,SAAS,QAC5B,KAAK,aAAa,4BACd,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,KAAK,GAAG,MACvC,KAAK,KAAK,IAAI;AAElB,eAAK,KAAK,IAAI;AAAA;AAAA;AAKlB,aAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAK3B;AAEH,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,WACA,GACA,QACA,KAAK,KAAK,IAAI,QACf,CAAC,KAAK,KAAK,IAAI;AAElB,QAAI,UAAU,CAAC,KAAK,KAAK,GAAG;AAE5B,QAAI,YAAY;AAChB,QAAI,cAAc;AAClB,QAAI,SACA,GACA,QACA,KAAK,KAAK,IAAI,QACf,CAAC,KAAK,KAAK,IAAI;AAAA;AAAA;",
  "names": []
}
