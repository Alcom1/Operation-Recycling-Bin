{
  "version": 3,
  "sources": ["/home/jonathan/Development/lego/Operation-Recycling-Bin/src/game/gameobjects/cursoricon.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\nimport GameObject, { GameObjectParams } from \"engine/gameobjects/gameobject\";\nimport Scene from \"engine/scene/scene\";\n\nexport enum CursorIconState {\n    NONE,\n    DRAG,\n    CARRY,\n    HOVER,\n    HOVERDOWN,\n    HOVERUP\n}\n\nexport default class CursorIcon extends GameObject {\n    private cursorURLs: Record<CursorIconState, string>;\n\n    public constructor(engine: Engine, params: GameObjectParams) {\n        super(engine, params);\n        \n        this.cursorURLs = {\n            [CursorIconState.NONE]: this.engine.baker.bake(\n                ctx => this.drawCursorBase(ctx),\n                32, 32,\n                \"CURSOR.NONE\"\n            ),\n            [CursorIconState.DRAG]: this.engine.baker.bake(\n                ctx => {\n                    this.drawCursorBase(ctx);\n                    this.drawDecalArrowDouble(ctx);\n                },\n                32, 32,\n                \"CURSOR.DRAG\"\n            ),\n            [CursorIconState.CARRY]: this.engine.baker.bake(\n                ctx => {\n                    this.drawCursorBase(ctx);\n                    this.drawDecalArrowQuad(ctx);\n                },\n                32, 32,\n                \"CURSOR.CARRY\"\n            ),\n            [CursorIconState.HOVER]: this.engine.baker.bake(\n                ctx => {\n                    this.drawCursorBase(ctx);\n                    this.drawDecalArrowDouble(ctx);\n                },\n                32, 32,\n                \"CURSOR.INDY\"\n            ),\n            [CursorIconState.HOVERDOWN]: this.engine.baker.bake(\n                ctx => {\n                    this.drawCursorBase(ctx);\n                    this.drawDecalArrowDown(ctx);\n                },\n                32, 32,\n                \"CURSOR.DOWN\"\n            ),\n            [CursorIconState.HOVERUP]: this.engine.baker.bake(\n                ctx => {\n                    this.drawCursorBase(ctx);\n                    this.drawDecalArrowUp(ctx);\n                },\n                32, 32,\n                \"CURSOR.UP\"\n            )\n        }\n\n        this.setCursor(CursorIconState.NONE);\n    }\n\n    /** Sets the cursor to match the provided state */\n    public setCursor(state: CursorIconState): void {\n        this.engine.mouse.setCursorURL(this.cursorURLs[state]);\n    }\n\n    /** Draw base cursor image */\n    public drawCursorBase(ctx: CanvasRenderingContext2D): void {\n        ctx.fillStyle = \"#FFF\";                 // Base cursor fill color\n        ctx.strokeStyle = \"#666\";               // Base cursor border color\n        ctx.lineWidth = 1.5;                    // Base cursor border width\n        ctx.lineJoin = \"round\";                 // Base cursor line style\n\n        ctx.beginPath();                        // Start path\n        ctx.moveTo(1,  1);                      // Top vertex\n        ctx.lineTo(1, 11);                      // Lower left vertex\n        ctx.lineTo(11, 1);                      // Lower right vertex\n        ctx.closePath();                        // Close path\n        ctx.fill();                             // Fill cursor\n        ctx.stroke();                           // Draw cursor border\n\n        ctx.beginPath();                        // Start path\n        ctx.arc(16, 16, 12, 0, 2 * Math.PI);    // Circle for icons\n        ctx.closePath();                        // Close path\n        ctx.fill();                             // Fill cursor\n        ctx.stroke();                           // Draw cursor border\n    }\n\n    /** Draw hover decal for cursor */\n    public drawDecalArrowDouble(ctx: CanvasRenderingContext2D): void {\n        ctx.fillStyle = \"#444\";                 // Hover decal color\n        ctx.translate(16, 16);                  // Translate. Drag decal is drawn around this center.\n        ctx.beginPath();                        // Start path\n\n        for(var i = 0; i < 2; i++) {            // Draw two opposing arrows\n\n            ctx.lineTo( 5,  3);                 // Right arrow vertex\n            ctx.lineTo( 0,  9);                 // Peak arrow vertex\n            ctx.lineTo(-5,  3);                 // Left arrow vertex\n        \n            ctx.lineTo(-2,  3);                 // Stalk base\n            ctx.lineTo(-2, -3);                 // Stalk extended to other side\n\n            ctx.rotate(Math.PI);                // Rotate for second arrow\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /** Draw hover decal for cursor */\n    public drawDecalArrowDown(ctx: CanvasRenderingContext2D): void {\n        ctx.translate(16, 17);  // Translate. Drag decal is drawn around this center.\n\n        this.drawDecalArrow(ctx);\n    }\n\n    /** Draw hover decal for cursor */\n    public drawDecalArrowUp(ctx: CanvasRenderingContext2D): void {\n        ctx.translate(16, 15);  // Translate. Drag decal is drawn around this center.\n        ctx.rotate(Math.PI);    // Rotate for second arrow\n\n        this.drawDecalArrow(ctx);\n    }\n\n    /** Draw a cursor arrow decal */\n    public drawDecalArrow(ctx: CanvasRenderingContext2D): void {\n        ctx.fillStyle = \"#444\"; // Arrow decal color\n\n        ctx.beginPath();        // Start path\n\n        ctx.lineTo( 5,  0);     // Right arrow vertex\n        ctx.lineTo( 0,  7);     // Peak arrow vertex\n        ctx.lineTo(-5,  0);     // Left arrow vertex\n    \n        ctx.lineTo(-2,  0);     // Stalk base\n        ctx.lineTo(-2, -8);     // Stalk extended to other side\n        \n        ctx.lineTo( 2, -8);     // Stalk extended to other side\n        ctx.lineTo( 2,  0);     // Stalk base\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /** Draw hover decal for cursor */\n    public drawDecalArrowQuad(ctx: CanvasRenderingContext2D): void {\n        ctx.translate(16, 16);          // Translate. Carry decal is drawn around this center.\n\n        ctx.rotate(Math.PI / 4);        // Rotate 8th circle\n        ctx.fillStyle = \"#333\";         // Outer diamond color\n        ctx.fillRect(-6, -6, 12, 12);   // Draw diamond\n\n        ctx.rotate(Math.PI / 4);        // Rotate 8th circle\n        ctx.fillStyle = \"#FFF\";         // Inner square color\n        ctx.fillRect(-4.5, -4.5, 9, 9); // Draw square\n    }\n}"],
  "mappings": "AACA;AAGO,WAAK;AAAL;AACH;AACA;AACA;AACA;AACA;AACA;AAAA,GANQ;AAJZ,wCAawC;AAAA,EAG7B;AACH,UAAM,SAAQ;AAEd,SAAK,aAAa;AAAA,OACb,IAAuB,KAAK,OAAO,MAAM,KACtC,SAAO,KAAK,eAAe,MAC3B,IAAI,IACJ;AAAA,OAEH,IAAuB,KAAK,OAAO,MAAM,KACtC;AACI,aAAK,eAAe;AACpB,aAAK,qBAAqB;AAAA,SAE9B,IAAI,IACJ;AAAA,OAEH,IAAwB,KAAK,OAAO,MAAM,KACvC;AACI,aAAK,eAAe;AACpB,aAAK,mBAAmB;AAAA,SAE5B,IAAI,IACJ;AAAA,OAEH,IAAwB,KAAK,OAAO,MAAM,KACvC;AACI,aAAK,eAAe;AACpB,aAAK,qBAAqB;AAAA,SAE9B,IAAI,IACJ;AAAA,OAEH,IAA4B,KAAK,OAAO,MAAM,KAC3C;AACI,aAAK,eAAe;AACpB,aAAK,mBAAmB;AAAA,SAE5B,IAAI,IACJ;AAAA,OAEH,IAA0B,KAAK,OAAO,MAAM,KACzC;AACI,aAAK,eAAe;AACpB,aAAK,iBAAiB;AAAA,SAE1B,IAAI,IACJ;AAAA;AAIR,SAAK,UAAU;AAAA;AAAA,EAIZ;AACH,SAAK,OAAO,MAAM,aAAa,KAAK,WAAW;AAAA;AAAA,EAI5C;AACH,QAAI,YAAY;AAChB,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,WAAW;AAEf,QAAI;AACJ,QAAI,OAAO,GAAI;AACf,QAAI,OAAO,GAAG;AACd,QAAI,OAAO,IAAI;AACf,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI;AACJ,QAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK;AAChC,QAAI;AACJ,QAAI;AACJ,QAAI;AAAA;AAAA,EAID;AACH,QAAI,YAAY;AAChB,QAAI,UAAU,IAAI;AAClB,QAAI;AAEJ,iBAAY,GAAG,IAAI,GAAG;AAElB,UAAI,OAAQ,GAAI;AAChB,UAAI,OAAQ,GAAI;AAChB,UAAI,OAAO,IAAK;AAEhB,UAAI,OAAO,IAAK;AAChB,UAAI,OAAO,IAAI;AAEf,UAAI,OAAO,KAAK;AAAA;AAGpB,QAAI;AACJ,QAAI;AAAA;AAAA,EAID;AACH,QAAI,UAAU,IAAI;AAElB,SAAK,eAAe;AAAA;AAAA,EAIjB;AACH,QAAI,UAAU,IAAI;AAClB,QAAI,OAAO,KAAK;AAEhB,SAAK,eAAe;AAAA;AAAA,EAIjB;AACH,QAAI,YAAY;AAEhB,QAAI;AAEJ,QAAI,OAAQ,GAAI;AAChB,QAAI,OAAQ,GAAI;AAChB,QAAI,OAAO,IAAK;AAEhB,QAAI,OAAO,IAAK;AAChB,QAAI,OAAO,IAAI;AAEf,QAAI,OAAQ,GAAG;AACf,QAAI,OAAQ,GAAI;AAEhB,QAAI;AACJ,QAAI;AAAA;AAAA,EAID;AACH,QAAI,UAAU,IAAI;AAElB,QAAI,OAAO,KAAK,KAAK;AACrB,QAAI,YAAY;AAChB,QAAI,SAAS,IAAI,IAAI,IAAI;AAEzB,QAAI,OAAO,KAAK,KAAK;AACrB,QAAI,YAAY;AAChB,QAAI,SAAS,MAAM,MAAM,GAAG;AAAA;AAAA;",
  "names": []
}
