{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\brickstud.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport GameObject, { GameObjectParams } from \"engine/gameobjects/gameobject\";\r\nimport { colorTranslate, getZIndex, GMULTX, GMULTY, UNDER_CURSOR_Z_INDEX, Z_DEPTH } from \"engine/utilities/math\";\r\n\r\ninterface BrickStudParams extends GameObjectParams {\r\n    color?: string;\r\n}\r\n\r\n/** Series of studs for a brick */\r\nexport default class BrickStud extends GameObject {\r\n    color: string;\r\n\r\n    image : HTMLImageElement;\r\n\r\n    isPressed = false;\r\n    isSelected = false;\r\n    isSnapped = false;\r\n    isVisible = true;\r\n\r\n    constructor(engine: Engine, params: BrickStudParams) {\r\n        super(engine, params);\r\n\r\n        this.color = colorTranslate(params.color);\r\n\r\n        this.zIndex = getZIndex(this.gpos, 1);\r\n\r\n        this.image = this.engine.library.getImage(`stud_${this.color.replace(\"#\", \"\").toLowerCase()}`);\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D): void {\r\n        if(this.isVisible) {\r\n            // Global transparency for selection states\r\n            ctx.globalAlpha =\r\n                this.isSnapped ? 0.75:  // Snapped studs are transparent\r\n                this.isSelected ? 0.5:  // Selected studs are more transparent\r\n                this.isPressed ? 0.75:  // Pressed studs are less transparent again\r\n                1.0;                    // Otherwise opaque if not selected or pressed\r\n            \r\n            // Draw the stored image for this stud\r\n            ctx.drawImage(this.image, Z_DEPTH - 13.5, 0);\r\n        }\r\n    }\r\n\r\n    /** Set this stud's snap state */\r\n    public snap(state: boolean): void {\r\n        if (state) {\r\n            this.isSnapped = true;\r\n            this.zIndex = getZIndex(this.gpos.getAdd({\r\n                x : Math.round(this.spos.x / GMULTX),\r\n                y : Math.round(this.spos.y / GMULTY)\r\n            }),\r\n            1);\r\n        }\r\n        else {\r\n            this.isSnapped = false;\r\n            // Set Z-index for dragging\r\n            this.zIndex = UNDER_CURSOR_Z_INDEX;\r\n        }\r\n    }\r\n\r\n    /** Setup this stud for pressing */\r\n    public press(): void {\r\n        this.isPressed = true;\r\n    }\r\n\r\n    // Setup this stud for selecting\r\n    public select(): void {\r\n        this.isSelected = true;\r\n        this.zIndex = UNDER_CURSOR_Z_INDEX;\r\n    }\r\n\r\n    /** Reset this stud's z-index */\r\n    public deselect(): void {\r\n        this.zIndex = getZIndex(this.gpos, 1);\r\n        \r\n        this.isPressed = false;\r\n        this.isSelected = false;\r\n        this.isSnapped = false;\r\n    }\r\n}"],
  "mappings": "AACA;AACA;AAFA,uCASuC;AAAA,EAUnC,YAAY;AACR,UAAM,SAAQ;AANlB,qBAAY;AACZ,sBAAa;AACb,qBAAY;AACZ,qBAAY;AAKR,SAAK,QAAQ,eAAe,OAAO;AAEnC,SAAK,SAAS,UAAU,KAAK,MAAM;AAEnC,SAAK,QAAQ,KAAK,OAAO,QAAQ,SAAS,QAAQ,KAAK,MAAM,QAAQ,KAAK,IAAI;AAAA;AAAA,EAG3E;AACH,QAAG,KAAK;AAEJ,UAAI,cACA,KAAK,YAAY,OACjB,KAAK,aAAa,MAClB,KAAK,YAAY,OACjB;AAGJ,UAAI,UAAU,KAAK,OAAO,UAAU,MAAM;AAAA;AAAA;AAAA,EAK3C;AACH,QAAI;AACA,WAAK,YAAY;AACjB,WAAK,SAAS,UAAU,KAAK,KAAK,OAAO;AAAA,QACrC,GAAI,KAAK,MAAM,KAAK,KAAK,IAAI;AAAA,QAC7B,GAAI,KAAK,MAAM,KAAK,KAAK,IAAI;AAAA,UAEjC;AAAA;AAGA,WAAK,YAAY;AAEjB,WAAK,SAAS;AAAA;AAAA;AAAA,EAKf;AACH,SAAK,YAAY;AAAA;AAAA,EAId;AACH,SAAK,aAAa;AAClB,SAAK,SAAS;AAAA;AAAA,EAIX;AACH,SAAK,SAAS,UAAU,KAAK,MAAM;AAEnC,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,SAAK,YAAY;AAAA;AAAA;",
  "names": []
}
