{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\spritecharacter.ts"],
  "sourcesContent": ["import Engine from \"engine/engine\";\r\nimport GameObject, { GameObjectParams } from \"engine/gameobjects/gameobject\";\r\nimport { getZIndex, GMULTX, GMULTY, round, Z_DEPTH } from \"engine/utilities/math\";\r\nimport Vect from \"engine/utilities/vect\";\r\nimport { CharacterImage, CharacterParams } from \"./character\";\r\n\r\nexport interface SpriteCharacterParams extends CharacterParams {\r\n    order : number;\r\n}\r\n\r\n/** Single image gameobject */\r\nexport default class SpriteCharacter extends GameObject {\r\n\r\n    //Set in constructor\r\n    private order : number;\r\n    private speed : number;\r\n    private imageRight : CharacterImage;\r\n    private imageLeft : CharacterImage;\r\n    private animFrames : number;\r\n    private animCount : number;\r\n\r\n    //Set in init\r\n    private animWidth : number = 0;\r\n    private animHeight : number = 0;\r\n\r\n    //Set here\r\n    private animTrack : number = 0;\r\n    private timer : number = 0;\r\n    public direction: number = 1;\r\n\r\n    constructor(engine : Engine, params : SpriteCharacterParams) {\r\n        super(engine, params);\r\n\r\n        this.order = params.order;\r\n        this.speed = params.speed ?? 1;\r\n        \r\n        this.imageRight = {\r\n            image : this.engine.library.getImage(\r\n                params.imageRight.name, \r\n                params.imageRight.extension),\r\n            offset : params.imageRight.offset\r\n        };\r\n\r\n        this.imageLeft = {\r\n            image : this.engine.library.getImage(\r\n                params.imageLeft.name, \r\n                params.imageLeft.extension),\r\n            offset : params.imageLeft.offset\r\n        };\r\n\r\n        this.animFrames = params.animFrames;\r\n        this.animCount = params.animCount;\r\n\r\n        this.setZIndex();\r\n    }\r\n\r\n    public init(ctx : CanvasRenderingContext2D) {\r\n\r\n        //Wait for init, images are guaranteed loaded by then\r\n        this.animWidth = this.imageRight.image.width / this.animFrames;\r\n        this.animHeight = this.imageRight.image.height;\r\n    }\r\n\r\n    public update(dt: number) {\r\n\r\n        //Increment timer by delta-time\r\n        this.timer += dt;\r\n    }\r\n\r\n    public updateSprite(gpos : Vect) {\r\n\r\n        this.timer = 0;\r\n        this.gpos = gpos;\r\n        this.animTrack = ++this.animTrack % this.animCount;\r\n        this.setZIndex();\r\n    }\r\n\r\n    private setZIndex() {\r\n        this.zIndex = getZIndex(\r\n            this.gpos,\r\n            300 - (this.order < 2 ? 0 : 295));\r\n    }\r\n\r\n    public draw(ctx : CanvasRenderingContext2D) {\r\n\r\n        ctx.translate(-this.spos.x, 0);\r\n\r\n        ctx.drawImage(\r\n            this.direction > 0 ? this.imageRight.image : this.imageLeft.image,\r\n            GMULTX * this.order + (this.direction > 0 ? this.imageRight.offset : this.imageLeft.offset) +\r\n            round((\r\n                this.animTrack +\r\n                this.timer * \r\n                this.speed) * \r\n                this.animWidth * \r\n                this.animFrames / \r\n                this.animCount - \r\n\r\n                this.animWidth / 2,\r\n\r\n                this.animWidth),\r\n            0,\r\n            GMULTX,\r\n            this.animHeight, \r\n\r\n            GMULTX * (this.order - 1),\r\n            GMULTY - this.animHeight,\r\n            GMULTX,\r\n            this.animHeight);\r\n\r\n        // ctx.globalAlpha = 0.5;\r\n        // ctx.strokeStyle = \"#F00\"\r\n        // ctx.lineWidth = 4;\r\n        // ctx.strokeRect(\r\n        //     GMULTX * (this.order - 1), \r\n        //     GMULTY, \r\n        //     GMULTX, \r\n        //    -this.animHeight);\r\n    }\r\n}"],
  "mappings": "AACA;AACA;AAFA,6CAW6C;AAAA,EAmBzC,YAAY;AACR,UAAM,SAAQ;AATV,qBAAqB;AACrB,sBAAsB;AAGtB,qBAAqB;AACrB,iBAAiB;AAClB,qBAAoB;AAKvB,SAAK,QAAQ,OAAO;AACpB,SAAK,QAAQ,OAAO,SAAS;AAE7B,SAAK,aAAa;AAAA,MACd,OAAQ,KAAK,OAAO,QAAQ,SACxB,OAAO,WAAW,MAClB,OAAO,WAAW;AAAA,MACtB,QAAS,OAAO,WAAW;AAAA;AAG/B,SAAK,YAAY;AAAA,MACb,OAAQ,KAAK,OAAO,QAAQ,SACxB,OAAO,UAAU,MACjB,OAAO,UAAU;AAAA,MACrB,QAAS,OAAO,UAAU;AAAA;AAG9B,SAAK,aAAa,OAAO;AACzB,SAAK,YAAY,OAAO;AAExB,SAAK;AAAA;AAAA,EAGF;AAGH,SAAK,YAAY,KAAK,WAAW,MAAM,QAAQ,KAAK;AACpD,SAAK,aAAa,KAAK,WAAW,MAAM;AAAA;AAAA,EAGrC;AAGH,SAAK,SAAS;AAAA;AAAA,EAGX;AAEH,SAAK,QAAQ;AACb,SAAK,OAAO;AACZ,SAAK,YAAY,EAAE,KAAK,YAAY,KAAK;AACzC,SAAK;AAAA;AAAA,EAGD;AACJ,SAAK,SAAS,UACV,KAAK,MACL,MAAO,MAAK,QAAQ,IAAI,IAAI;AAAA;AAAA,EAG7B;AAEH,QAAI,UAAU,CAAC,KAAK,KAAK,GAAG;AAE5B,QAAI,UACA,KAAK,YAAY,IAAI,KAAK,WAAW,QAAQ,KAAK,UAAU,OAC5D,SAAS,KAAK,QAAS,MAAK,YAAY,IAAI,KAAK,WAAW,SAAS,KAAK,UAAU,UACpF,MACI,MAAK,YACL,KAAK,QACL,KAAK,SACL,KAAK,YACL,KAAK,aACL,KAAK,YAEL,KAAK,YAAY,GAEjB,KAAK,YACT,GACA,QACA,KAAK,YAEL,SAAU,MAAK,QAAQ,IACvB,SAAS,KAAK,YACd,QACA,KAAK;AAAA;AAAA;",
  "names": []
}
