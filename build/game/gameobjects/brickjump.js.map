{
  "version": 3,
  "sources": ["C:\\Users\\Alcom\\Desktop\\Dev\\Git\\Operation Recycling Bin\\src\\game\\gameobjects\\brickjump.ts"],
  "sourcesContent": ["import { Collider } from \"engine/modules/collision\";\r\nimport { Faction, MASKS } from \"engine/utilities/math\";\r\nimport BrickHandler from \"./brickhandler\";\r\nimport { BrickTileParams } from \"./bricktile\";\r\nimport BrickTileTop from \"./bricktiletop\";\r\n\r\n/** Specifications of a jump brick */\r\nconst brickJumpOverride = Object.freeze({\r\n    images : [\"brick_jump_up\", \"brick_jump\"],\r\n    imageTop : \"brick_jump_top\",\r\n    isShowTopIfOn : false\r\n});\r\n\r\n/** Jump brick, has an extra plate on top for the jump animation */\r\nexport default class BrickJump extends BrickTileTop {\r\n\r\n    private brickHandler!: BrickHandler;\r\n    private timer : number = 0;             // Timer 1 for jump animation\r\n    private timerDuration : number = 0.1;   // Timer 1 duration\r\n    private timer2 : number = 0;            // Timer 2 for jump cooldown\r\n    private timer2Duration : number = 1.2;  // Timer 2 duration\r\n\r\n    /** Constructor */\r\n    constructor(params: BrickTileParams) {\r\n        super(Object.assign({}, brickJumpOverride, params));\r\n    }\r\n\r\n    /** Initialize Jump Brick */\r\n    public init() {\r\n\r\n        // Get brick handler to to check if this jump is blocked by other bricks\r\n        this.brickHandler = this.engine.tag.get(\r\n            \"BrickHandler\", \r\n            \"LevelInterface\")[0] as BrickHandler;\r\n    }\r\n\r\n    /** Update jump brick for timer */\r\n    public update(dt : number) {\r\n\r\n        // Update Timer\r\n        if (this.timer > 0) {\r\n            this.timer -= dt;\r\n        }\r\n        else {\r\n            this.timer = 0;\r\n            this.setOnOff(true);\r\n        }\r\n\r\n        // Update Timer 2\r\n        if (this.timer2 > 0) {\r\n            this.timer2 -= dt;\r\n        }\r\n        else {\r\n            this.timer2 = 0;\r\n        }\r\n    }\r\n\r\n    /** Check if this brick is blocked by bricks on top */\r\n    public isBlocked() : boolean {\r\n\r\n        // Grey bricks probably shouldn't perform this check.\r\n        if (this.isGrey) {\r\n            return false;\r\n        }\r\n\r\n        // Check for bricks\r\n        return !!this.brickHandler.checkCollisionRange(\r\n            this.gpos.getAdd({\r\n                x : 0,\r\n                y : -2\r\n            }), // Position\r\n            1,  // Direction\r\n            0,  // START\r\n            2,  // FINAL\r\n            1,  // HEIGHT\r\n            undefined, \r\n            Faction.HOSTILE);\r\n    }\r\n\r\n    /** Get hazard and passive colliders of this brick. */\r\n    public getColliders() : Collider[] {\r\n\r\n        // Combine with passive collider from base class, only return jump hitbox if the plate is on and not selected\r\n        return super.getColliders().concat(this.isOn && this.timer2 == 0 && !this.isSelected && !this.isBlocked() ? [{\r\n            mask : MASKS.jumps,\r\n            min : this.gpos.getAdd({ x : 0,          y : -1}),\r\n            max : this.gpos.getAdd({ x : this.width, y :  0}) \r\n        }] : []);\r\n    }\r\n\r\n    /** Turn off */\r\n    public resolveCollision(mask : number) {\r\n\r\n        // Turn off when a jump is triggered\r\n        if (mask & MASKS.jumps) {\r\n            this.setOnOff(false);\r\n            this.timer = this.timerDuration;\r\n            this.timer2 = this.timer2Duration;\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "AACA;AAGA;AAGA,MAAM,oBAAoB,OAAO,OAAO;AAAA,EACpC,QAAS,CAAC,iBAAiB;AAAA,EAC3B,UAAW;AAAA,EACX,eAAgB;AAAA;AAVpB,uCAcuC;AAAA,EASnC;AACI,UAAM,OAAO,OAAO,IAAI,mBAAmB;AAPvC,iBAAiB;AACjB,yBAAyB;AACzB,kBAAkB;AAClB,0BAA0B;AAAA;AAAA,EAQ3B;AAGH,SAAK,eAAe,KAAK,OAAO,IAAI,IAChC,gBACA,kBAAkB;AAAA;AAAA,EAInB;AAGH,QAAI,KAAK,QAAQ;AACb,WAAK,SAAS;AAAA;AAGd,WAAK,QAAQ;AACb,WAAK,SAAS;AAAA;AAIlB,QAAI,KAAK,SAAS;AACd,WAAK,UAAU;AAAA;AAGf,WAAK,SAAS;AAAA;AAAA;AAAA,EAKf;AAGH,QAAI,KAAK;AACL,aAAO;AAAA;AAIX,WAAO,CAAC,CAAC,KAAK,aAAa,oBACvB,KAAK,KAAK,OAAO;AAAA,MACb,GAAI;AAAA,MACJ,GAAI;AAAA,QAER,GACA,GACA,GACA,GACA,QACA,QAAQ;AAAA;AAAA,EAIT;AAGH,WAAO,MAAM,eAAe,OAAO,KAAK,QAAQ,KAAK,UAAU,KAAK,CAAC,KAAK,cAAc,CAAC,KAAK,cAAc,CAAC;AAAA,MACzG,MAAO,MAAM;AAAA,MACb,KAAM,KAAK,KAAK,OAAO,CAAE,GAAI,GAAY,GAAI;AAAA,MAC7C,KAAM,KAAK,KAAK,OAAO,CAAE,GAAI,KAAK,OAAO,GAAK;AAAA,SAC7C;AAAA;AAAA,EAIF;AAGH,QAAI,OAAO,MAAM;AACb,WAAK,SAAS;AACd,WAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,KAAK;AAAA;AAAA;AAAA;",
  "names": []
}
